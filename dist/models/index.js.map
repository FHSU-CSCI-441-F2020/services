{"version":3,"sources":["../../src/models/index.js"],"names":["sequelize","process","env","DATABASE_URL","Sequelize","dialect","TEST_DATABASE","DATABASE","DATABASE_USER","DATABASE_PASSWORD","models","User","import","Message","Employer","UserProfile","Job","Object","keys","forEach","key","associate"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAIA,SAAJ;;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,YAAhB,EAA8B;AAC5B,sBAAAH,SAAS,GAAG,IAAII,kBAAJ,CAAcH,OAAO,CAACC,GAAR,CAAYC,YAA1B,EAAwC;AAClDE,IAAAA,OAAO,EAAE;AADyC,GAAxC,CAAZ;AAGD,CAJD,MAIO;AACL,sBAAAL,SAAS,GAAG,IAAII,kBAAJ,CACVH,OAAO,CAACC,GAAR,CAAYI,aAAZ,IAA6BL,OAAO,CAACC,GAAR,CAAYK,QAD/B,EAEVN,OAAO,CAACC,GAAR,CAAYM,aAFF,EAGVP,OAAO,CAACC,GAAR,CAAYO,iBAHF,EAIV;AACEJ,IAAAA,OAAO,EAAE;AADX,GAJU,CAAZ;AAQD;;AAED,MAAMK,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAEX,SAAS,CAACY,MAAV,CAAiB,QAAjB,CADO;AAEbC,EAAAA,OAAO,EAAEb,SAAS,CAACY,MAAV,CAAiB,WAAjB,CAFI;AAGbE,EAAAA,QAAQ,EAAEd,SAAS,CAACY,MAAV,CAAiB,YAAjB,CAHG;AAIbG,EAAAA,WAAW,EAAEf,SAAS,CAACY,MAAV,CAAiB,eAAjB,CAJA;AAKbI,EAAAA,GAAG,EAAGhB,SAAS,CAACY,MAAV,CAAiB,OAAjB;AALO,CAAf,C,CAQA;;AACAK,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,OAApB,CAA6BC,GAAD,IAAS;AACnC,MAAI,eAAeV,MAAM,CAACU,GAAD,CAAzB,EAAgC;AAC9BV,IAAAA,MAAM,CAACU,GAAD,CAAN,CAAYC,SAAZ,CAAsBX,MAAtB;AACD;AACF,CAJD;eAQeA,M","sourcesContent":["import Sequelize from \"sequelize\";\r\nimport \"dotenv/config\";\r\n\r\n// Set sequelize based on environment\r\nlet sequelize;\r\nif (process.env.DATABASE_URL) {\r\n  sequelize = new Sequelize(process.env.DATABASE_URL, {\r\n    dialect: \"postgres\",\r\n  });\r\n} else {\r\n  sequelize = new Sequelize(\r\n    process.env.TEST_DATABASE || process.env.DATABASE,\r\n    process.env.DATABASE_USER,\r\n    process.env.DATABASE_PASSWORD,\r\n    {\r\n      dialect: \"postgres\",\r\n    }\r\n  );\r\n}\r\n\r\nconst models = {\r\n  User: sequelize.import(\"./user\"),\r\n  Message: sequelize.import(\"./message\"),\r\n  Employer: sequelize.import(\"./employer\"),\r\n  UserProfile: sequelize.import(\"./userProfile\"),\r\n  Job : sequelize.import(\"./job\"),\r\n};\r\n\r\n// Create associations between modelss\r\nObject.keys(models).forEach((key) => {\r\n  if (\"associate\" in models[key]) {\r\n    models[key].associate(models);\r\n  }\r\n});\r\n\r\nexport { sequelize };\r\n\r\nexport default models;\r\n"],"file":"index.js"}