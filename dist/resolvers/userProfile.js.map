{"version":3,"sources":["../../src/resolvers/userProfile.js"],"names":["Query","getUserProfile","parent","userId","models","userProfile","UserProfile","findAll","where","console","log","getUserProfiles","active","Mutation","createProfile","isAuthenticated","isAdmin","args","create","statement","education","workExperience","lookingFor","skills","address1","address2","city","state","zip","country","updateProfile","findByPk","id","newStatement","newEducation","newWorkExperience","newLookingFor","newSkills","newActive","newAddress1","newAddress2","newCity","newState","newZip","newCountry","update"],"mappings":";;;;;;;AACA;;AAEA;;AAEA;;AALA;AAEA;AAEA;eAQe;AACbA,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,cAAc,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,EAA2B;AAAEC,MAAAA;AAAF,KAA3B,KAA0C;AACxD,YAAMC,WAAW,GAAG,MAAMD,MAAM,CAACE,WAAP,CAAmBC,OAAnB,CAA2B;AACnDC,QAAAA,KAAK,EAAE;AACLL,UAAAA,MAAM,EAAEA;AADH;AAD4C,OAA3B,CAA1B;AAKAM,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EANwD,CAOxD;;AACA,aAAOA,WAAW,CAAC,CAAD,CAAlB;AACD,KAXI;AAYL;AACAM,IAAAA,eAAe,EAAE,OAAOT,MAAP,EAAe;AAAEU,MAAAA;AAAF,KAAf,EAA2B;AAAER,MAAAA;AAAF,KAA3B,KAA0C;AACzD,UAAIC,WAAJ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;;AACA,UAAIA,MAAJ,EAAY;AACVP,QAAAA,WAAW,GAAG,MAAMD,MAAM,CAACE,WAAP,CAAmBC,OAAnB,CAA2B;AAC7CC,UAAAA,KAAK,EAAE;AACLI,YAAAA,MAAM,EAAEA;AADH;AADsC,SAA3B,CAApB;AAKD,OAND,MAMO;AACLP,QAAAA,WAAW,GAAG,MAAMD,MAAM,CAACE,WAAP,CAAmBC,OAAnB,EAApB;AACD;;AAED,aAAOF,WAAP;AACD;AA3BI,GADM;AA8BbQ,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,aAAa,EAAE,wCACbC,kCAAmBC,sBADN,EAEb,OAAOd,MAAP,EAAee,IAAf,EAAqB;AAAEb,MAAAA;AAAF,KAArB,KAAoC;AAClC;AACA,YAAMC,WAAW,GAAG,MAAMD,MAAM,CAACE,WAAP,CAAmBY,MAAnB,CAA0B;AAClDf,QAAAA,MAAM,EAAEc,IAAI,CAACd,MADqC;AAElDgB,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAFkC;AAGlDC,QAAAA,SAAS,EAAE,CAACH,IAAI,CAACG,SAAN,CAHuC;AAIlDC,QAAAA,cAAc,EAAE,CAACJ,IAAI,CAACI,cAAN,CAJkC;AAKlDC,QAAAA,UAAU,EAAE,CAACL,IAAI,CAACK,UAAN,CALsC;AAMlDC,QAAAA,MAAM,EAAE,CAACN,IAAI,CAACM,MAAN,CAN0C;AAOlDX,QAAAA,MAAM,EAAEK,IAAI,CAACL,MAPqC;AAQlDY,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QARmC;AASlDC,QAAAA,QAAQ,EAAER,IAAI,CAACQ,QATmC;AAUlDC,QAAAA,IAAI,EAAET,IAAI,CAACS,IAVuC;AAWlDC,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAXsC;AAYlDC,QAAAA,GAAG,EAAEX,IAAI,CAACW,GAZwC;AAalDC,QAAAA,OAAO,EAAEZ,IAAI,CAACY;AAboC,OAA1B,CAA1B,CAFkC,CAkBlC;;AACA,aAAOxB,WAAP;AACD,KAtBY,CAFP;AA0BR;AACAyB,IAAAA,aAAa,EAAE,wCACbf,kCAAmBC,sBADN,EAEb,OAAOd,MAAP,EAAee,IAAf,EAAqB;AAAEb,MAAAA;AAAF,KAArB,KAAoC;AAClC;AACA,UAAIC,WAAW,GAAG,MAAMD,MAAM,CAACE,WAAP,CAAmByB,QAAnB,CAA4Bd,IAAI,CAACe,EAAjC,CAAxB,CAFkC,CAGlC;;AACA,YAAMC,YAAY,GAAGhB,IAAI,CAACE,SAAL,GACjBF,IAAI,CAACE,SADY,GAEjBd,WAAW,CAACc,SAFhB;AAGA,YAAMe,YAAY,GAAGjB,IAAI,CAACG,SAAL,GACjBH,IAAI,CAACG,SADY,GAEjBf,WAAW,CAACe,SAFhB;AAGA,YAAMe,iBAAiB,GAAGlB,IAAI,CAACI,cAAL,GACtBJ,IAAI,CAACI,cADiB,GAEtBhB,WAAW,CAACgB,cAFhB;AAGA,YAAMe,aAAa,GAAGnB,IAAI,CAACK,UAAL,GAClBL,IAAI,CAACK,UADa,GAElBjB,WAAW,CAACiB,UAFhB;AAGA,YAAMe,SAAS,GAAGpB,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACM,MAAnB,GAA4BlB,WAAW,CAACkB,MAA1D;AACA,YAAMe,SAAS,GAAGrB,IAAI,CAACL,MAAL,GAAcK,IAAI,CAACL,MAAnB,GAA4BP,WAAW,CAACO,MAA1D;AACA,YAAM2B,WAAW,GAAGtB,IAAI,CAACO,QAAL,GAChBP,IAAI,CAACO,QADW,GAEhBnB,WAAW,CAACmB,QAFhB;AAGA,YAAMgB,WAAW,GAAGvB,IAAI,CAACQ,QAAL,GAChBR,IAAI,CAACQ,QADW,GAEhBpB,WAAW,CAACoB,QAFhB;AAGA,YAAMgB,OAAO,GAAGxB,IAAI,CAACS,IAAL,GAAYT,IAAI,CAACS,IAAjB,GAAwBrB,WAAW,CAACqB,IAApD;AACA,YAAMgB,QAAQ,GAAGzB,IAAI,CAACU,KAAL,GAAaV,IAAI,CAACU,KAAlB,GAA0BtB,WAAW,CAACsB,KAAvD;AACA,YAAMgB,MAAM,GAAG1B,IAAI,CAACW,GAAL,GAAWX,IAAI,CAACW,GAAhB,GAAsBvB,WAAW,CAACuB,GAAjD;AACA,YAAMgB,UAAU,GAAG3B,IAAI,CAACY,OAAL,GAAeZ,IAAI,CAACY,OAApB,GAA8BxB,WAAW,CAACwB,OAA7D,CA3BkC,CA6BlC;;AACAxB,MAAAA,WAAW,GAAG,MAAMA,WAAW,CAACwC,MAAZ,CAAmB;AACrC1B,QAAAA,SAAS,EAAEc,YAD0B;AAErCb,QAAAA,SAAS,EAAEc,YAF0B;AAGrCb,QAAAA,cAAc,EAAEc,iBAHqB;AAIrCb,QAAAA,UAAU,EAAEc,aAJyB;AAKrCb,QAAAA,MAAM,EAAEc,SAL6B;AAMrCzB,QAAAA,MAAM,EAAE0B,SAN6B;AAOrCd,QAAAA,QAAQ,EAAEe,WAP2B;AAQrCd,QAAAA,QAAQ,EAAEe,WAR2B;AASrCd,QAAAA,IAAI,EAAEe,OAT+B;AAUrCd,QAAAA,KAAK,EAAEe,QAV8B;AAWrCd,QAAAA,GAAG,EAAEe,MAXgC;AAYrCd,QAAAA,OAAO,EAAEe;AAZ4B,OAAnB,CAApB,CA9BkC,CA6ClC;;AACA,aAAOvC,WAAP;AACD,KAjDY;AA3BP;AA9BG,C","sourcesContent":["// Allow for authentications\r\nimport { combineResolvers } from \"graphql-resolvers\";\r\n// Apollo error handling\r\nimport { AuthenticationError, UserProfileInputError } from \"apollo-server\";\r\n// Check if user has admin role\r\nimport {\r\n  isAdmin,\r\n  isAuthenticated,\r\n  isUserProfile,\r\n  isAuthEmployee,\r\n} from \"./authorization\";\r\n\r\nexport default {\r\n  Query: {\r\n    // Single UserProfile\r\n    getUserProfile: async (parent, { userId }, { models }) => {\r\n      const userProfile = await models.UserProfile.findAll({\r\n        where: {\r\n          userId: userId,\r\n        },\r\n      });\r\n      console.log(userProfile);\r\n      // Return single user\r\n      return userProfile[0];\r\n    },\r\n    // All UserProfiles\r\n    getUserProfiles: async (parent, { active }, { models }) => {\r\n      let userProfile;\r\n      console.log(active);\r\n      if (active) {\r\n        userProfile = await models.UserProfile.findAll({\r\n          where: {\r\n            active: active,\r\n          },\r\n        });\r\n      } else {\r\n        userProfile = await models.UserProfile.findAll();\r\n      }\r\n\r\n      return userProfile;\r\n    },\r\n  },\r\n  Mutation: {\r\n    // Create new userProfile\r\n    createProfile: combineResolvers(\r\n      isAuthenticated || isAdmin,\r\n      async (parent, args, { models }) => {\r\n        // Create new userProfile\r\n        const userProfile = await models.UserProfile.create({\r\n          userId: args.userId,\r\n          statement: args.statement,\r\n          education: [args.education],\r\n          workExperience: [args.workExperience],\r\n          lookingFor: [args.lookingFor],\r\n          skills: [args.skills],\r\n          active: args.active,\r\n          address1: args.address1,\r\n          address2: args.address2,\r\n          city: args.city,\r\n          state: args.state,\r\n          zip: args.zip,\r\n          country: args.country,\r\n        });\r\n\r\n        // Return userProfile and address as an object\r\n        return userProfile;\r\n      }\r\n    ),\r\n    // Update userProfile information\r\n    updateProfile: combineResolvers(\r\n      isAuthenticated || isAdmin,\r\n      async (parent, args, { models }) => {\r\n        // Retrieve both userProfile and address\r\n        let userProfile = await models.UserProfile.findByPk(args.id);\r\n        // Check each possible arguments for changes\r\n        const newStatement = args.statement\r\n          ? args.statement\r\n          : userProfile.statement;\r\n        const newEducation = args.education\r\n          ? args.education\r\n          : userProfile.education;\r\n        const newWorkExperience = args.workExperience\r\n          ? args.workExperience\r\n          : userProfile.workExperience;\r\n        const newLookingFor = args.lookingFor\r\n          ? args.lookingFor\r\n          : userProfile.lookingFor;\r\n        const newSkills = args.skills ? args.skills : userProfile.skills;\r\n        const newActive = args.active ? args.active : userProfile.active;\r\n        const newAddress1 = args.address1\r\n          ? args.address1\r\n          : userProfile.address1;\r\n        const newAddress2 = args.address2\r\n          ? args.address2\r\n          : userProfile.address2;\r\n        const newCity = args.city ? args.city : userProfile.city;\r\n        const newState = args.state ? args.state : userProfile.state;\r\n        const newZip = args.zip ? args.zip : userProfile.zip;\r\n        const newCountry = args.country ? args.country : userProfile.country;\r\n\r\n        // Update userProfile if data changed\r\n        userProfile = await userProfile.update({\r\n          statement: newStatement,\r\n          education: newEducation,\r\n          workExperience: newWorkExperience,\r\n          lookingFor: newLookingFor,\r\n          skills: newSkills,\r\n          active: newActive,\r\n          address1: newAddress1,\r\n          address2: newAddress2,\r\n          city: newCity,\r\n          state: newState,\r\n          zip: newZip,\r\n          country: newCountry,\r\n        });\r\n\r\n        // Return userProfile and address as an object\r\n        return userProfile;\r\n      }\r\n    ),\r\n  },\r\n};\r\n"],"file":"userProfile.js"}