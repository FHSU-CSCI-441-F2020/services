{"version":3,"sources":["../../src/resolvers/user.js"],"names":["createToken","user","secret","expiresIn","id","email","username","role","jwt","sign","Query","getUsers","parent","args","models","User","findAll","getUser","findByPk","me","Mutation","registerUser","password","firstName","lastName","newUser","create","token","loginUser","login","findByLogin","UserInputError","isValid","validatePassword","AuthenticationError","deleteUser","isUser","isAdmin","destroy","where","updateUser","newUsername","newEmail","newPassword","newFirstName","newLastName","newRole","update","messages","Message","userId"],"mappings":"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","sourcesContent":["// Generate token\r\nimport jwt from \"jsonwebtoken\";\r\n// Allow for authentications\r\nimport { combineResolvers } from \"graphql-resolvers\";\r\n// Apollo error handling\r\nimport { AuthenticationError, UserInputError } from \"apollo-server\";\r\n// Check if user has admin role\r\nimport { isAdmin, isAuthenticated, isUser } from \"./authorization\";\r\n\r\n// Generate token\r\nconst createToken = async (user, secret, expiresIn) => {\r\n  const { id, email, username, role } = user;\r\n  return await jwt.sign({ id, email, username, role }, secret, {\r\n    expiresIn,\r\n  });\r\n};\r\n\r\nexport default {\r\n  Query: {\r\n    // Multiple Users\r\n    getUsers: async (parent, args, { models }) => {\r\n      return await models.User.findAll();\r\n    },\r\n    // Single User\r\n    getUser: async (parent, { id }, { models }) => {\r\n      return await models.User.findByPk(id);\r\n    },\r\n    // Current User\r\n    me: async (parent, args, { models, me }) => {\r\n      if (!me) {\r\n        return null;\r\n      }\r\n      return await models.User.findByPk(me.id);\r\n    },\r\n  },\r\n  Mutation: {\r\n    // Add user with hashed password\r\n    registerUser: async (\r\n      parent,\r\n      { username, email, password, firstName, lastName, role },\r\n      { models, secret }\r\n    ) => {\r\n      const newUser = await models.User.create({\r\n        username,\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n        role,\r\n      });\r\n\r\n      return {\r\n        token: createToken(newUser, secret, \"30 days\"),\r\n        user: newUser,\r\n      };\r\n    },\r\n    // Sign in user based on user input.\r\n    loginUser: async (\r\n      parent,\r\n      // Login can be username or email\r\n      { login, password },\r\n      { models, secret }\r\n    ) => {\r\n      const user = await models.User.findByLogin(login);\r\n      // Throw user input error if no user found\r\n      if (!user) {\r\n        throw new UserInputError(\"No user found with this login credentials.\");\r\n      }\r\n\r\n      // Boolean variable if password if valid\r\n      const isValid = await user.validatePassword(password);\r\n\r\n      // If password is not valid, through authentication error\r\n      if (!isValid) {\r\n        throw new AuthenticationError(\"Invalid password.\");\r\n      }\r\n      // Return token for client\r\n      return { token: createToken(user, secret, \"30 days\") };\r\n    },\r\n    // Delete a user\r\n    deleteUser: combineResolvers(\r\n      isUser || isAdmin,\r\n      async (parent, { id }, { models }) => {\r\n        return await models.User.destroy({\r\n          where: { id },\r\n        });\r\n      }\r\n    ),\r\n    // Delete a user\r\n    updateUser: combineResolvers(\r\n      isUser || isAdmin,\r\n      async (\r\n        parent,\r\n        { id, username, email, password, firstName, lastName, role },\r\n        { models }\r\n      ) => {\r\n        let user = await models.User.findByPk(id);\r\n\r\n        const newUsername = username ? username : user.username;\r\n        const newEmail = email ? email : user.email;\r\n        const newPassword = password ? password : user.password;\r\n        const newFirstName = firstName ? firstName : user.firstName;\r\n        const newLastName = lastName ? lastName : user.lastName;\r\n        const newRole = role ? role : user.role;\r\n\r\n        await user.update({\r\n          username: newUsername,\r\n          email: newEmail,\r\n          password: newPassword,\r\n          firstName: newFirstName,\r\n          lastName: newLastName,\r\n          role: newRole,\r\n        });\r\n\r\n        return await models.User.findByPk(id);\r\n      }\r\n    ),\r\n  },\r\n  // Define User message type return value\r\n  User: {\r\n    messages: async (user, args, { models }) => {\r\n      return await models.Message.findAll({\r\n        where: {\r\n          userId: user.id,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n"],"file":"user.js"}